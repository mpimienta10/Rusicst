//------------------------------------------------------------------------------
// <auto-generated>
//    Este código se generó a partir de una plantilla.
//
//    Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//    Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mininterior.RusicstMVC.Entidades
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class EntitiesRusicstLogOld : DbContext
    {
        public EntitiesRusicstLogOld()
            : base("name=EntitiesRusicstLogOld")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual ObjectResult<C_ListaCategoryLogOld_Result> C_ListaCategoryLogOld()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_ListaCategoryLogOld_Result>("C_ListaCategoryLogOld");
        }
    
        public virtual ObjectResult<C_LogXCategoriaExportarOld_Result> C_LogXCategoriaExportarOld(Nullable<int> idCategoria, string userName, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_LogXCategoriaExportarOld_Result>("C_LogXCategoriaExportarOld", idCategoriaParameter, userNameParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<C_LogXCategoriaOld_Result> C_LogXCategoriaOld(Nullable<int> idCategoria, string userName, Nullable<System.DateTime> fechaInicio, Nullable<System.DateTime> fechaFin)
        {
            var idCategoriaParameter = idCategoria.HasValue ?
                new ObjectParameter("IdCategoria", idCategoria) :
                new ObjectParameter("IdCategoria", typeof(int));
    
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var fechaInicioParameter = fechaInicio.HasValue ?
                new ObjectParameter("FechaInicio", fechaInicio) :
                new ObjectParameter("FechaInicio", typeof(System.DateTime));
    
            var fechaFinParameter = fechaFin.HasValue ?
                new ObjectParameter("FechaFin", fechaFin) :
                new ObjectParameter("FechaFin", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_LogXCategoriaOld_Result>("C_LogXCategoriaOld", idCategoriaParameter, userNameParameter, fechaInicioParameter, fechaFinParameter);
        }
    
        public virtual ObjectResult<C_LogOld_Result> C_LogOld(Nullable<int> logID)
        {
            var logIDParameter = logID.HasValue ?
                new ObjectParameter("LogID", logID) :
                new ObjectParameter("LogID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<C_LogOld_Result>("C_LogOld", logIDParameter);
        }
    }
}
